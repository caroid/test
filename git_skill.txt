20151103: other commands

20151101: frequency commands
git init

git add .
git commit 

git branch -av # List all existing branches
git checkout <branch> # Switch HEAD branch

git remote -v # List all currently configured remotes
git remote add <shortname> <url> # Add new remote repository,named <remote>

git pull <remote> <branch> # Download changes and directly merge/integrate into HEAD
git push <remote> <branch> # Publish local changes on a remote

git merge <branch> # Merge <branch> into your current HEAD

.gitignore ### The template of ignored files type Don't commit to repository.

reference resource:础 
git add
git commit
git status

git diff

git log
git reflog

git reset --hard HEAD^
git reset --hard commit_id

git checkout -- file_name

git push -u origin master

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

git clone git@github.com:michaelliao/gitskills.git

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

查看远程库信息，使用git remote -v；
本地新建的分支如果不推送到远程，对其他人就是不可见的；
从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；
在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

